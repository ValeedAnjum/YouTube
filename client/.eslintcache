[{"E:\\React\\React Projects-3\\YouTube\\client\\src\\index.js":"1","E:\\React\\React Projects-3\\YouTube\\client\\src\\App.js":"2","E:\\React\\React Projects-3\\YouTube\\client\\src\\reportWebVitals.js":"3","E:\\React\\React Projects-3\\YouTube\\client\\src\\components\\Navbar\\Navbar.js":"4","E:\\React\\React Projects-3\\YouTube\\client\\src\\components\\Navbar\\Icon\\Logo.js":"5","E:\\React\\React Projects-3\\YouTube\\client\\src\\components\\Navbar\\MobileDrawer.js":"6"},{"size":449,"mtime":1610967129825,"results":"7","hashOfConfig":"8"},{"size":208,"mtime":1610118643763,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":4153,"mtime":1610967548393,"results":"11","hashOfConfig":"8"},{"size":5357,"mtime":1610966781373,"results":"12","hashOfConfig":"8"},{"size":2066,"mtime":1611853687305,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"efngbt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React\\React Projects-3\\YouTube\\client\\src\\index.js",[],["28","29"],"E:\\React\\React Projects-3\\YouTube\\client\\src\\App.js",[],"E:\\React\\React Projects-3\\YouTube\\client\\src\\reportWebVitals.js",[],"E:\\React\\React Projects-3\\YouTube\\client\\src\\components\\Navbar\\Navbar.js",["30"],"import React, { Fragment, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {\r\n  IconButton,\r\n  makeStyles,\r\n  Button,\r\n  Avatar,\r\n  Grid,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport VideoCallIcon from \"@material-ui/icons/VideoCall\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport YouTubeIcon from \"./Icon/Logo\";\r\nimport MobileDrawer from \"./MobileDrawer\";\r\nconst useStyle = makeStyles((theme) => {\r\n  return {\r\n    appbar: {\r\n      backgroundColor: \"white\",\r\n    },\r\n  };\r\n});\r\nconst links = () => (\r\n  <Fragment>\r\n    <IconButton>\r\n      <AppsIcon color=\"action\" />\r\n    </IconButton>\r\n    <IconButton>\r\n      <MoreVertIcon color=\"action\" />\r\n    </IconButton>\r\n    <Button variant=\"outlined\" color=\"default\">\r\n      <AccountCircleIcon />\r\n      sign in\r\n    </Button>\r\n  </Fragment>\r\n);\r\nconst authLinks = () => {\r\n  return (\r\n    <Fragment>\r\n      <Hidden xsDown>\r\n        <IconButton>\r\n          <VideoCallIcon color=\"action\" />\r\n        </IconButton>\r\n        <IconButton>\r\n          <AppsIcon color=\"action\" />\r\n        </IconButton>\r\n        <IconButton>\r\n          <NotificationsIcon color=\"action\" />\r\n        </IconButton>\r\n      </Hidden>\r\n      <IconButton>\r\n        <Avatar alt=\"user-name\" src=\"./pictures/avatar.jpg\" />\r\n      </IconButton>\r\n    </Fragment>\r\n  );\r\n};\r\nconst Navbar = () => {\r\n  const [auth, setAuth] = useState(true);\r\n  const [mobileDrawer, setMobileDrawer] = useState(false);\r\n  const classes = useStyle();\r\n  const setMobileDrawerState = () => {\r\n    setMobileDrawer(!mobileDrawer);\r\n  };\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appbar}>\r\n      <Toolbar>\r\n        <Grid container style={{ flexWrap: \"nowrap\" }}>\r\n          <Grid md={2} item container alignItems=\"center\">\r\n            <IconButton onClick={setMobileDrawerState}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <div style={{ width: \"80px\" }}>\r\n              <YouTubeIcon />\r\n            </div>\r\n          </Grid>\r\n          {/* menu and icon button */}\r\n          <Hidden smDown>\r\n            <Grid md={8} item justify=\"center\" container alignItems=\"center\">\r\n              <Grid container xs={9} item>\r\n                <input\r\n                  type=\"text\"\r\n                  style={{\r\n                    borderRadius: \"0\",\r\n                    border: \"1px solid #cfcccc\",\r\n                    outline: \"none\",\r\n                    flexGrow: \"1\",\r\n                  }}\r\n                  placeholder=\"Search\"\r\n                />\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"default\"\r\n                  style={{\r\n                    backgroundColor: \"#f8f8f8\",\r\n                    borderRadius: \"0\",\r\n                    border: \"1px solid #cfcccc\",\r\n                    borderLeft: \"none\",\r\n                  }}\r\n                >\r\n                  <SearchIcon style={{ color: \"rgb(146 143 143)\" }} />\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <IconButton>\r\n                  <MicIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n          {/* searchbar and mice icon  */}\r\n          <Grid\r\n            container\r\n            md={2}\r\n            item\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n            style={{ flexWrap: \"nowrap\" }}\r\n          >\r\n            {auth ? authLinks() : links()}\r\n          </Grid>\r\n        </Grid>\r\n        <Fragment>\r\n          <MobileDrawer\r\n            mobileDrawer={mobileDrawer}\r\n            setMobileDrawerState={setMobileDrawerState}\r\n          />\r\n        </Fragment>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\React\\React Projects-3\\YouTube\\client\\src\\components\\Navbar\\Icon\\Logo.js",[],"E:\\React\\React Projects-3\\YouTube\\client\\src\\components\\Navbar\\MobileDrawer.js",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":64,"column":16,"nodeType":"38","messageId":"39","endLine":64,"endColumn":23},{"ruleId":"36","severity":1,"message":"40","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":25},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'setAuth' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]